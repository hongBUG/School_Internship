package cn.tentact.nebula.company

import cn.tentact.nebula.web.ResponseBean
import org.apache.shiro.authz.annotation.Logical
import org.apache.shiro.authz.annotation.RequiresPermissions
import org.springframework.beans.factory.annotation.Autowired
import org.springframework.web.bind.annotation.RequestMapping
import org.springframework.web.bind.annotation.RestController

/**
 * 企业模块网络类
 */
@RestController
@RequestMapping("/company")
class CompanyController implements I_CompanyController {

	@Autowired
	I_CompanyService i_CompanyService;

	@RequestMapping("/searchCount")
	@RequiresPermissions(logical=Logical.OR, value=#["0", "7-4-3"])
	override searchCount(String name, String domain) {
		var count = i_CompanyService.searchCount(#{"name" -> name, "domain" -> domain});
		return new ResponseBean(200, null, true, count);
	}

	@RequestMapping("/searchList")
	@RequiresPermissions(logical=Logical.OR, value=#["0", "7-4-3"])
	override searchList(String name, String domain, int start, int length) {
		var list = i_CompanyService.searchList(
			#{"name" -> name, "domain" -> domain, "start" -> start, "length" -> length});
		return new ResponseBean(200, null, true, list);
	}

	@RequestMapping("/add")
	@RequiresPermissions(logical=Logical.OR, value=#["0", "7-1-3"])
	override add(String name, String domain, String type, String property, String scale, String address, String tel,
		String introduction) {
		var map = #{
			"name" -> name,
			"domain" -> domain,
			"type" -> type,
			"property" -> property,
			"scale" -> scale,
			"address" -> address,
			"tel" -> tel,
			"introduction" -> introduction
		}
		var i = i_CompanyService.add(map);
		return new ResponseBean(200, null, true, i);
	}

	@RequestMapping("/searchById")
	@RequiresPermissions(logical=Logical.OR, value=#["0", "7-4-3"])
	override searchById(int id) {
		var record = i_CompanyService.searchById(id);
		return new ResponseBean(200, null, true, record);
	}

	@RequestMapping("/update")
	@RequiresPermissions(logical=Logical.OR, value=#["0", "7-3-1", "7-3-3"])
	override update(int id, String name, String domain, String type, String property, String scale, String address,
		String tel, String introduction) {
		var map = #{
			"id" -> id,
			"name" -> name,
			"domain" -> domain,
			"type" -> type,
			"property" -> property,
			"scale" -> scale,
			"address" -> address,
			"tel" -> tel,
			"introduction" -> introduction
		}
		var i = i_CompanyService.update(map);
		return new ResponseBean(200, null, true, i);
	}

	@RequestMapping("/deleteById")
	@RequiresPermissions(logical=Logical.OR, value=#["0", "7-2-3"])
	override deleteById(Integer[] id) {
		var i = i_CompanyService.deleteById(#{"id"->id});
		return new ResponseBean(200, null, true, i);
	}

}
